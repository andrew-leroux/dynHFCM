[{"path":"https://andrew-leroux.github.io/dynHFCM/articles/lm_hflm_estimation_prediction.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Landmark Historical Functional Cox Regression","text":"document shows estimate landmark historical functional Cox regression model extract estimated quantities interest. vigentte organized three sections. first section, describe model mathematically provide details method. next section, apply method simulated. final section show obtain estimated quantities interest fitted model. Note vignette intended used conjunction manuscript entitled “Dynamic prediction using landmark historical functional Cox regression” number technical details omitted brevity. Readers encouraged read manuscript prior working vignette better understand methodology involved.","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/articles/lm_hflm_estimation_prediction.html","id":"the-landmark-historical-functional-cox-model-lm-hflm","dir":"Articles","previous_headings":"","what":"The landmark historical functional Cox model (LM-HFLM)","title":"Landmark Historical Functional Cox Regression","text":"landmark historical functional Cox model extension Cox proportional hazards model modeling time--event data (outcome) subject right censoring presence time-varying covariate. model allows historical value time-varying covariate influence individual’s risk way varies follow-time. association modeled non-parametrically using penalized regression splines. landmark approach modelling time event data conditional approach whereby risk modeled conditional surviving set landmark times follow-period may either short long. Landmark models computationally efficient approach approximating Cox model time-varying covariates /effects present. case landmark historical functional Cox model, landmark approach approximation historical functional Cox model. result, describing LM-HFLCM first introduce historical functional Cox model motivation.","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/articles/lm_hflm_estimation_prediction.html","id":"notation","dir":"Articles","previous_headings":"The landmark historical functional Cox model (LM-HFLM)","what":"Notation","title":"Landmark Historical Functional Cox Regression","text":"introduce model first define necessary notation. Let \\(= 1,\\ldots,N\\) denote individual. Let \\(X_i\\) single time invariant predictor, let \\(Z_{}(t_{ij})\\) denote \\(j^{\\text{th}}\\) observation single time varying predictor time \\(t_{ij}\\). introduce \\(Z_i^{\\mathcal{H}}(t) = \\{Z_i(s): s \\leq t \\}\\) denote history \\(Z(\\cdot)\\) time \\(t\\). assumed \\(Z(\\cdot)\\) continuous bounded stochastic process. \\(Z(\\cdot)\\) may observed regular irregular intervals possibly error. Next, denote individual’s true event time \\(T_i\\), subject right censoring, denoted \\(C_i\\). result censoring, observe \\(T_i^*=\\min{(T_i,C_i)}\\), \\(d_i = 1(T_i < C_i)\\), event indicator subject \\(\\). observed data \\(\\{T_i^*, d_i, X_i, Z_i^{\\mathcal{H}}(T_i^*): 1 \\leq \\leq N\\}\\). Censoring time assumed independent event time given covariates. landmark approach also require notation related landmark times. Specifically, denote collection \\(L\\) landmark times \\(\\mathbf{s} = \\{s_1, \\ldots, s_L\\}\\) \\(L\\) corresponding prediction window lengths \\(\\mathbf{w} = \\{w_1, \\ldots, w_L \\}\\).","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/articles/lm_hflm_estimation_prediction.html","id":"the-historical-functional-cox-model","dir":"Articles","previous_headings":"The landmark historical functional Cox model (LM-HFLM)","what":"The historical functional Cox model","title":"Landmark Historical Functional Cox Regression","text":"historical functional Cox model models additive effect covariates log hazard function. Specifically, consider time, \\(t\\). log hazard function subject \\(\\) \\[\\begin{equation} \\log \\lambda_i(t|X_i, Z_i^{\\mathcal{H}}(t)) = \\log \\lambda_0(t) + X_i\\mathbf{\\beta} + \\int_0^t Z_i(u)\\gamma(u,t)du\\;. \\end{equation}\\] model , \\(\\gamma(\\cdot,t)\\) historical effect longitudinal predictor experiencing event. trying interpret \\(\\gamma(\\cdot,t)\\), can helpful view “weight” function weights relative contribution entire history risk current time. example, \\(\\gamma(u, t)\\) large positive values \\(u\\) close \\(t\\) (recent history), near \\(0\\) values \\(u\\) far past, higher recent values \\(Z_i(u)\\) associated increased risk event, higher historical values contribute little current risk.","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/articles/lm_hflm_estimation_prediction.html","id":"the-landmark-historical-functional-cox-model-lm-hfcm","dir":"Articles","previous_headings":"The landmark historical functional Cox model (LM-HFLM)","what":"The landmark historical functional Cox model (LM-HFCM)","title":"Landmark Historical Functional Cox Regression","text":"problem historical functional Cox model context dynamic prediction can seen closer examination model. Specifically, predictions survival time \\(t\\) given data time \\(s < t\\) require time-dependent covariate, \\(Z_i(\\cdot)\\), way time \\(t\\). However, \\(Z_i(t)\\) partially observed, specifically \\(s\\). landmark approach addresses problem using set landmark times \\(\\mathbf{s} = \\{s_1, \\ldots, s_L\\}\\) landmark, \\(s_l\\), focusing data study participants survived beyond \\(s_l\\). Combining idea historical functional Cox model landmark approach naturally leads following landmark historical functional Cox model (LM-HFCM) \\[\\begin{equation} \\log \\lambda_i(t|X_i, Z_i^{\\mathcal{H}}(s_l),s_l) = \\log \\lambda_0(t|s_l) + X_i\\mathbf{\\beta}(s_l) + \\int_0^{s_l} Z_i(u)\\gamma(u,s_l)du\\;, %\\hspace{.5in} \\mbox{} s \\leq t \\leq  s + w_l . \\end{equation}\\] \\(s_l \\leq t \\leq s_l + w_l\\) landmark times \\(l = 1,\\ldots, L\\). common appraoch choose landmark times prediction windows \\((s_l, s_l + w_l]\\) forms partition \\((0, t_{\\text{max}}]\\) \\(t_{\\text{max}} = \\text{max}(T_1^*, \\ldots, T_N^*)\\).","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/articles/lm_hflm_estimation_prediction.html","id":"lm-hfcm-estimation","dir":"Articles","previous_headings":"","what":"LM-HFCM: Estimation","title":"Landmark Historical Functional Cox Regression","text":"introduced method, now show estimate model using simulated data. first load data, set landmark dataset, apply method.","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/articles/lm_hflm_estimation_prediction.html","id":"setting-up-the-data","dir":"Articles","previous_headings":"LM-HFCM: Estimation","what":"Setting up the data","title":"Landmark Historical Functional Cox Regression","text":"data example simulated advance data contained package. data simulated using data generating mechanism scenario 2 manuscript. Code provided . data provided long format, column subject identifier (id), event/censoring time (T, \\(T_i^*\\)), event indicator (E, \\(d_i\\)), longitudinal predictor (Z, \\(Z_i(t)\\)) time observation \\(Z_i\\) (tind, \\(t\\)). ’ve loaded data, next step create landmark dataset. code shows create landmark dataset required model fitting using make_lm_data function dynHFCM package. , fit two LM-HFCM models use set landmark times (\\(\\mathbf{s}\\)) two different choices prediction windows \\(w = 0.02\\) \\(w=\\infty\\). Landmark times chosen evenly spaced grid length 50 \\([0,1)\\). way first set landmark times/prediction windows forms partition range event time (participants data administratively censored \\(t=1\\)), second set landmark times/prediction windows uses overlapping times. show structure landmark data . data organized participant (id). original data file know participant 1 experienced event \\(T_i = 0.319\\). , participant data first 16 landmark times. new landmark dataset additional columns landmark time (s, \\(s\\)), corresponding prediction window (w_s, \\(w_s\\)), landmark-specific event time (event_time_lm), landmark specific event indicator. individual id=1 event beyond prediction window \\(w=0.02\\) first several landmark times, landmark-specific event indicator \\(0\\) event time equal \\(s_l + w = s_l + 0.02\\). now view second landmark dataset, \\(w=\\infty\\), see individual id=1 landmark-specific event indicators \\(1\\) event time equal observed time \\(T_i^* = 0.319 < s_l + \\infty\\) landmark times.","code":"library(dynHFCM) data(\"hfcm_sim_data\") str(hfcm_sim_data) ## 'data.frame':    42619 obs. of  5 variables: ##  $ id  : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ T   : num  0.319 0.319 0.319 0.319 0.319 ... ##  $ E   : num  1 1 1 1 1 1 1 1 1 1 ... ##  $ Z   : num  0.957 -0.104 -0.678 -1.012 -1.956 ... ##  $ tind: num  0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 ... ## grid of observation tmin <- 0 # time of first observation tmax <- 1 # time of last observation (administrative censoring)  ## landmark times and prediciton windows S <- seq(tmin, tmax, len=51)[-51]       # landmark times for both landmark models W1 <- diff(c(S, tmax))                  # prediction windows for first landmark model (w=0.04) W2 <- rep(Inf, length(S))               # prediction windows for second landmark model (w=infinity)   ## create landmark datasets for estiamting the landmark historical functional Cox models data_lm_w1 <- make_lm_data(data=hfcm_sim_data, vars_tv=\"Z\",vars_tf=c(), id=\"id\", event_time=\"T\",                             time=\"tind\", S=S, wide=FALSE, censor_var=\"E\", w=W1) data_lm_w2 <- make_lm_data(data=hfcm_sim_data, vars_tv=\"Z\",vars_tf=c(), id=\"id\", event_time=\"T\",                             time=\"tind\", S=S, wide=FALSE, censor_var=\"E\", w=W2) str(data_lm_w1) ## 'data.frame':    21543 obs. of  11 variables: ##  $ id           : Factor w/ 1000 levels \"1\",\"2\",\"3\",\"4\",..: 1 1 1 1 1 1 1 1 1 1 ... ##  $ T            : num  0.319 0.319 0.319 0.319 0.319 ... ##  $ E            : num  1 1 1 1 1 1 1 1 1 1 ... ##  $ s            : num  0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 ... ##  $ w_s          : num  0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 ... ##  $ event_time_lm: num  0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 0.2 ... ##  $ event_lm     : num  0 0 0 0 0 0 0 0 0 0 ... ##  $ tind         : 'AsIs' num [1:21543, 1:99] 0 0 0 0 0 0 0 0 0 0 ... ##   ..- attr(*, \"dimnames\")=List of 2 ##   .. ..$ : chr [1:21543] \"1\" \"1\" \"1\" \"1\" ... ##   .. ..$ : chr [1:99] \"1\" \"2\" \"3\" \"4\" ... ##  $ Z            : 'AsIs' num [1:21543, 1:99] 0.957 0.957 0.957 0.957 0.957 ... ##   ..- attr(*, \"dimnames\")=List of 2 ##   .. ..$ : chr [1:21543] \"1\" \"1\" \"1\" \"1\" ... ##   .. ..$ : chr [1:99] \"1\" \"2\" \"3\" \"4\" ... ##  $ smat         : 'AsIs' num [1:21543, 1:99] 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 ... ##  $ Z_int_cn     : 'AsIs' num [1:21543, 1:99] 0.00928 0.00941 0.00949 0.00972 0.0098 ... sum(data_lm_w1$id == 1) ## [1] 16 str(data_lm_w2) ## 'data.frame':    21543 obs. of  11 variables: ##  $ id           : Factor w/ 1000 levels \"1\",\"2\",\"3\",\"4\",..: 1 1 1 1 1 1 1 1 1 1 ... ##  $ T            : num  0.319 0.319 0.319 0.319 0.319 ... ##  $ E            : num  1 1 1 1 1 1 1 1 1 1 ... ##  $ s            : num  0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 ... ##  $ w_s          : num  Inf Inf Inf Inf Inf ... ##  $ event_time_lm: num  0.319 0.319 0.319 0.319 0.319 ... ##  $ event_lm     : num  1 1 1 1 1 1 1 1 1 1 ... ##  $ tind         : 'AsIs' num [1:21543, 1:99] 0 0 0 0 0 0 0 0 0 0 ... ##   ..- attr(*, \"dimnames\")=List of 2 ##   .. ..$ : chr [1:21543] \"1\" \"1\" \"1\" \"1\" ... ##   .. ..$ : chr [1:99] \"1\" \"2\" \"3\" \"4\" ... ##  $ Z            : 'AsIs' num [1:21543, 1:99] 0.957 0.957 0.957 0.957 0.957 ... ##   ..- attr(*, \"dimnames\")=List of 2 ##   .. ..$ : chr [1:21543] \"1\" \"1\" \"1\" \"1\" ... ##   .. ..$ : chr [1:99] \"1\" \"2\" \"3\" \"4\" ... ##  $ smat         : 'AsIs' num [1:21543, 1:99] 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 ... ##  $ Z_int_cn     : 'AsIs' num [1:21543, 1:99] 0.00928 0.00941 0.00949 0.00972 0.0098 ..."},{"path":"https://andrew-leroux.github.io/dynHFCM/articles/lm_hflm_estimation_prediction.html","id":"fitting-the-model","dir":"Articles","previous_headings":"LM-HFCM: Estimation","what":"Fitting the model","title":"Landmark Historical Functional Cox Regression","text":"set landmark datasets, model estimated easily using mgcv package. Estimation landmark models extremely fast.","code":"# fit landmark model with w=0.02 st_time_lm_w1  <- Sys.time() fit_lm_w1 <- gam(cbind(event_time_lm, s) ~ s(tind, smat, by=Z_int_cn), family=cox.ph, weights=event_lm, data=data_lm_w1) (fit_time_lm_w1 <- difftime(Sys.time(), st_time_lm_w1, units=\"mins\")) ## Time difference of 0.06673228 mins # fit landmark model with w=infinity st_time_lm_w2  <- Sys.time() fit_lm_w2 <- gam(cbind(event_time_lm, s) ~ s(tind, smat, by=Z_int_cn), family=cox.ph, weights=event_lm, data=data_lm_w2) (fit_time_lm_w2 <- difftime(Sys.time(), st_time_lm_w2, units=\"mins\")) ## Time difference of 0.06799162 mins"},{"path":[]},{"path":"https://andrew-leroux.github.io/dynHFCM/articles/lm_hflm_estimation_prediction.html","id":"extracting-hatgammaus","dir":"Articles","previous_headings":"LM-HFCM: Working with the fitted obejct","what":"Extracting \\(\\hat{\\gamma}(u,s)\\)","title":"Landmark Historical Functional Cox Regression","text":"key quantity interest extract fitted object estimated functional coefficient, \\(\\hat{\\gamma}(u,s)\\). code shows . need first specify grid \\((u,s)\\), \\(u < s\\) wish obtain estimates . use evenly spaced grid length 100 \\([0,\\text{max}(\\mathbf{s})]\\). code plots true function along landmark model estimates. can see , expected, landmark model \\(w=0.04\\) estimates truth much closely model \\(w=\\infty\\) due bias associated long prediction window.","code":"nupred_coef <- 100 nspred_coef <- 100 upred_coef <- seq(tmin, max(S), len=nupred_coef) spred_coef <- seq(min(S), max(S), len=nspred_coef) ## get estimated coefficient # to get the estimated coefficients, need to evaluate the coefficient using predict.gam with type=\"terms\" df_pred_lm_coef <- data.frame(tind = rep(upred_coef, nspred_coef),                               smat = rep(spred_coef, each=nupred_coef),                               Z_int_cn = 1) df_pred_lm_coef <- subset(df_pred_lm_coef, tind < smat) gamma_hat_lm_w1 <- predict(fit_lm_w1, newdata=df_pred_lm_coef, type=\"terms\") gamma_hat_lm_w2 <- predict(fit_lm_w2, newdata=df_pred_lm_coef, type=\"terms\") ## combine results into a single data frame for plotting df_pred_lm_coef$gamma_hat_w1 <- gamma_hat_lm_w1[,\"s(tind,smat):Z_int_cn\"] df_pred_lm_coef$gamma_hat_w2 <- gamma_hat_lm_w2[,\"s(tind,smat):Z_int_cn\"] ## add in the true coefficient value df_pred_lm_coef <-    df_pred_lm_coef %>%    mutate(gamma_true = cos(2 * pi * (smat-tind) / 0.5)  * 10)  ## plot the results # transform to long format for faceting then plot df_pred_lm_coef %>%    pivot_longer(cols=c(\"gamma_hat_w1\",\"gamma_hat_w2\",\"gamma_true\"),                 names_to = \"result\", values_to=\"gamma_hat\") %>%    mutate(result = factor(result, levels=c(\"gamma_true\",\"gamma_hat_w1\",\"gamma_hat_w2\"),                          labels=c(\"Truth\",\"Estimate w=0.04\",\"Estimate w=Infinity\"))) %>%    ggplot() +    geom_raster(aes(x=tind,y=smat,fill=gamma_hat)) + facet_grid(~result) +    scale_fill_gradientn(colours=fields::tim.colors(50)) + theme_classic() + xlab(\"Historical Time (u)\") +    ylab(\"Landmark Time (s)\")"},{"path":"https://andrew-leroux.github.io/dynHFCM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrew Leroux. Maintainer.","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Leroux , Crainiceanu C (2024). dynHFCM: Dynamic Prediction using landmark historical functional Cox regression. R package version 0.1.0, https://andrew-leroux.github.io/dynHFCM/.","code":"@Manual{,   title = {dynHFCM: Dynamic Prediction using landmark historical functional Cox regression},   author = {Andrew Leroux and Ciprian Crainiceanu},   year = {2024},   note = {R package version 0.1.0},   url = {https://andrew-leroux.github.io/dynHFCM/}, }"},{"path":"https://andrew-leroux.github.io/dynHFCM/index.html","id":"dynhfcm","dir":"","previous_headings":"","what":"Dynamic Prediction using landmark historical functional Cox regression","title":"Dynamic Prediction using landmark historical functional Cox regression","text":"dynHFCM package R package facilitates estimation prediction landmark historical functional Cox model (LM-HFCM). can install dynHFCM Github using devtools package running following code:","code":"#install.package(\"devtools\") devtools::install_github(\"andrew-leroux/dynHFCM\")"},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/ID_AUC.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for calculating ","title":"Function for calculating ","text":"Function calculating \"local\" AUC(s,t)","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/ID_AUC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for calculating ","text":"","code":"ID_AUC(marker, Stime, status, predict.time, entry = NULL)"},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/ID_AUC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for calculating ","text":"marker vector predicted survival probability time indicated predict.time argument Stime vector observed survival times participants status vector event indicators participants predict.time scalar indicating time (t) AUC(s,t) calcuated entry exclude participants events/censoring time","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/PE.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for calculating ","title":"Function for calculating ","text":"Function calculating \"local\" PE(s,t)","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/PE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for calculating ","text":"","code":"PE(marker, Stime, status, predict.time, SCfun, start.time)"},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/PE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for calculating ","text":"marker vector predicted survival probability time indicated predict.time argument Stime vector observed survival times participants status vector event indicators participants predict.time scalar indicating time (t) AUC(s,t) calcuated SCfun evaluating survival function censoring distribution start.time landmark time associated PE(s,t)","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/gamma_cos.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a historical functional coefficient where risk is of the form \\(c \\times cos(2 \\times \\pi \\times u/p)\\) with \\(u=s-t\\) for a fixed landmark time — gamma_cos","title":"Create a historical functional coefficient where risk is of the form \\(c \\times cos(2 \\times \\pi \\times u/p)\\) with \\(u=s-t\\) for a fixed landmark time — gamma_cos","text":"Create historical functional coefficient risk form \\(c \\times cos(2 \\times \\pi \\times u/p)\\) \\(u=s-t\\) fixed landmark time","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/gamma_cos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a historical functional coefficient where risk is of the form \\(c \\times cos(2 \\times \\pi \\times u/p)\\) with \\(u=s-t\\) for a fixed landmark time — gamma_cos","text":"","code":"gamma_cos(t, s, period = 1/2, scale = 10)"},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/gamma_cos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a historical functional coefficient where risk is of the form \\(c \\times cos(2 \\times \\pi \\times u/p)\\) with \\(u=s-t\\) for a fixed landmark time — gamma_cos","text":"t vector containing historical time evaluating historical functional coefficient s scalar containing \"landmark\" time evaluating historical functional coefficient period period cosine function (\\(p\\)) scale scaling factor coefficient (\\(c\\))","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/gamma_exp_decay.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a historical functional coefficient using an exponential decay model for a fixed landmark time — gamma_exp_decay","title":"Create a historical functional coefficient using an exponential decay model for a fixed landmark time — gamma_exp_decay","text":"Create historical functional coefficient using exponential decay model fixed landmark time","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/gamma_exp_decay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a historical functional coefficient using an exponential decay model for a fixed landmark time — gamma_exp_decay","text":"","code":"gamma_exp_decay(t, s, d = 1/5, scale = 1)"},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/gamma_exp_decay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a historical functional coefficient using an exponential decay model for a fixed landmark time — gamma_exp_decay","text":"t vector containing historical time evaluating historical functional coefficient s scalar containing \"landmark\" time evaluating historical functional coefficient d numeric indicating mean exponential random variable whose density function determins rate decay coefficient function scale scaling factor coefficient","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/genSurv.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for simulating survival curves for the historical functional Cox model using a single time-fixed and time-varying covariate — genSurv","title":"Function for simulating survival curves for the historical functional Cox model using a single time-fixed and time-varying covariate — genSurv","text":"Function simulating survival curves historical functional Cox model using single time-fixed time-varying covariate","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/genSurv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for simulating survival curves for the historical functional Cox model using a single time-fixed and time-varying covariate — genSurv","text":"","code":"genSurv(   lambda0,   beta,   gamma = gamma_exp_decay,   tind,   Z,   X,   N,   cens_fun = NULL,   returnS = FALSE,   ... )"},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/genSurv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for simulating survival curves for the historical functional Cox model using a single time-fixed and time-varying covariate — genSurv","text":"lambda0 function takes time input returns baseline hazard beta function takes time input returns potentially time varying effect single scalar covariate gamma function takes time historical time input returns historical functional coefficient tind grid evaluate survival curve Z matrix longitudinal/time varying predictor used creating survival curve individuals, evaluated grid supplied \"tind\" argument (N rows) X vector time-fixed covariate (length N) N integer, number functions observed. equal length X number rows Z cens_fun function generates censoring times returnS logical indicating whether return simulated survival functions along survival times ... arguments passed gen_gamma_mat","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/gen_gamma_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for evaluating the historical functional coefficient. Called by the genSurv function — gen_gamma_mat","title":"Function for evaluating the historical functional coefficient. Called by the genSurv function — gen_gamma_mat","text":"Function evaluating historical functional coefficient. Called genSurv function","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/gen_gamma_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for evaluating the historical functional coefficient. Called by the genSurv function — gen_gamma_mat","text":"","code":"gen_gamma_mat(gammafun, S, Tind, ...)"},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/gen_gamma_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for evaluating the historical functional coefficient. Called by the genSurv function — gen_gamma_mat","text":"gammafun function evaluates landmark historical functional coefficient. evaluate fixed landmark time vector historical times using arguments passed tot function via ... S vector containing \"landmark\" times evaluating historical functional coefficient Tind vector containing historical time evaluating historical functional coefficient ... arguments passed gammafun period period cosine function (\\(p\\)) scale scaling factor coefficient (\\(c\\))","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/getSurvT.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate survival times using a survival curve evaluated on a discrete grid — getSurvT","title":"Simulate survival times using a survival curve evaluated on a discrete grid — getSurvT","text":"Simulate survival times using survival curve evaluated discrete grid","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/getSurvT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate survival times using a survival curve evaluated on a discrete grid — getSurvT","text":"","code":"getSurvT(survfunction, tind)"},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/getSurvT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate survival times using a survival curve evaluated on a discrete grid — getSurvT","text":"survfunction vector containing estimates survival function \\(S(t) \\[0,1]\\) tind vector indicating time points associated survfunction input","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/hfcm_sim_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated data under a historical functional Cox data generating mechanism — hfcm_sim_data","title":"Simulated data under a historical functional Cox data generating mechanism — hfcm_sim_data","text":"dataset containing survival outcomes (survival censoring time, event indicator) longitudinal data time-varying covariate 1000 individuals. Data long format thus survival times event indicators repeated within individuals.","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/hfcm_sim_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated data under a historical functional Cox data generating mechanism — hfcm_sim_data","text":"","code":"hfcm_sim_data"},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/hfcm_sim_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated data under a historical functional Cox data generating mechanism — hfcm_sim_data","text":"data frame 42619 rows 5 variables: id subject identifier T event censoring time E event indicator (1 event observed, 0 event censored) Z longitidunal/functional predictor tind observation time functional predictor, Z","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/hfcm_sim_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated data under a historical functional Cox data generating mechanism — hfcm_sim_data","text":"simulated data","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/make_lm_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for creating the landmark dataset — make_lm_data","title":"Function for creating the landmark dataset — make_lm_data","text":"Function creating landmark dataset","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/make_lm_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for creating the landmark dataset — make_lm_data","text":"","code":"make_lm_data(   data,   vars_tv,   vars_tf,   id,   event_time,   time,   S,   wide = FALSE,   censor_var,   w = NULL )"},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/make_lm_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for creating the landmark dataset — make_lm_data","text":"data frame data (long format) vars_tv character vector time-varying predictors vars_tf character vector time-fixed predictors (must vary within grouping variable) id character vector length 1 indicating grouping (\"id\") variable event_time character vector length 1 indicating event time variable (\"event_time\") time character vector length 1 indicating time observation time-varying predictors (\"time\"). Currently supports common grid observation times multiple time-varying predictors. S numeric vector landmark times (S) wide logical indicating whether data supplied function wide format (FALSE) long format (TRUE) censor_var character vector length 1 indicating event indicator variable. variable must coded 1=event, 0=censor w numeric vector prediction windows (w). Must either length 1 length vector landmark times (s) center logical indicating whether also return landmark mean-centered functional predictors (works regularly observed data currently)","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/predict_lm_cumulative_hazard.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for creating the landmark dataset — predict_lm_cumulative_hazard","title":"Function for creating the landmark dataset — predict_lm_cumulative_hazard","text":"Function creating landmark dataset","code":""},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/predict_lm_cumulative_hazard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for creating the landmark dataset — predict_lm_cumulative_hazard","text":"","code":"predict_lm_cumulative_hazard(fit, s, tpred)"},{"path":"https://andrew-leroux.github.io/dynHFCM/reference/predict_lm_cumulative_hazard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for creating the landmark dataset — predict_lm_cumulative_hazard","text":"fit fitter LM-HFLCM s length 1 numeric vector indicating landmark time tpred numeric vector predictor times evaluate cumulative hazard function","code":""}]
